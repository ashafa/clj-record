Support specifying (not inferring):
  * model-name of an association
  * foreign-key column name

Allow update to be called with nil values. (Should be a patch to clojure.contrib.sql I think.)

More callbacks.

:stop-if-invalid to abort early inside (:validation ...) form.
  * Not sure that makes the most sense ... maybe multiple validations hanging off one attribute would be better.

Eager fetching of associations.

Test with hsqldb in addition to derby, different connections for different models. Will hopefully force:
  * eliminating vendor-specific bits.
  * getting db configuration saner.

(io!) bomb if any database work is attempted in a dosync block?
  * Gilardi has added this to sql/transaction.

Create lazy seqs for multi-value associations?
  Would like to do lazy singular associations too ... not sure what that can look like.

Pretty migrations. Maybe just a series of contributions to clojure.contrib.sql.

Figure out a way to test init-model options without putting every bizarre case into manufacturer. It's getting ridiculous.
  * This is largely (maybe sufficiently) addressed now that init-model is side-effect free and tests can 
    directly use the expanded forms of options, then restore the model metadata when they're finished.

Support for BLOBs, CLOBs.

TODONE

"Serialization" of data structures as attribute values.
  * Use this http://groups.google.com/group/clojure/msg/e21bf475b45bd2d5

Generate fancier queries with some fancy query API.
  * http://gist.github.com/64357

